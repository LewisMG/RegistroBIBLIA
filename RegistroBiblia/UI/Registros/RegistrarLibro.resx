<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="GeneralerrorProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB3n2AtfKJnpHyiZ+R9ombvfKJn7H2kZtR5n2R4dKJdCwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACWh3gRnIp4VZyKeFWcinhVnIp4VZyKeFWcinhVnIp4VZyK
        eFWcinhVnIp4VZyKeFWcinhVnIp4Vbmqm3jCuKaPkah40oeqc/arzqL/u9+4/73guv+94Lr/t9qy/57B
        kvd8omfmd6BfPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJuMeDOwo5Pz19HJ/9fRyf/X0cn/19HJ/9fR
        yf/X0cn/19HJ/9fRyf/X0cn/19HJ/9fRyf/X0cn/2tLI/5qxhv+ZvYv/vOC5/73guv+94Lr/veC6/73g
        uv+94Lr/veC6/7XYsP+ApmvudZ5dPwAAAAAAAAAAAAAAAAAAAAAAAAAAm4x4M7+zp+v/////////////
        ///////////////////////////////////////////////////P3Mb/lbiF/73guv+94Lr/veC6/73g
        uv/y+fH/3e/b/73guv+94Lr/veC6/7XYsP98oWblgJlmCgAAAAAAAAAAAAAAAAAAAACbjHgzv7On6///
        /////////////////////////////////////////////////////////////46ue/+427P/veC6/73g
        uv+94Lr/veC6///////l8+T/veC6/73guv+94Lr/veC6/57CkvZ6n2V3AAAAAAAAAAAAAAAAAAAAAJuM
        eDO/s6fr///////////////////////////////////////////////////////////o7uT/lLeF/73g
        uv+94Lr/veC6/73guv+94Lr//////+Xz5P+94Lr/veC6/73guv+94Lr/uNuz/36jaNUAAAAAAAAAAAAA
        AAAAAAAAm4x4M7+zp+v//////////////////////////////////////////////////////////9Le
        yv+ewpL/veC6/8Xkwv/l8+T/5fPk/+Xz5P//////9fr0/+Xz5P/l8+T/3e/b/73guv+94Lr/fqNo5wAA
        AAAAAAAAAAAAAAAAAACbjHgzv7On6///////////////////////////////////////////////////
        ////////zdvE/6DDlP+94Lr/yubI///////////////////////////////////////y+fH/veC6/73g
        uv9+pGnpAAAAAAAAAAAAAAAAAAAAAJuMeDO/s6fr////////////////9/b0/+vo5P/r6OT/6+jk/+vo
        5P/r6OT/6+jk/+rm4f/M0b3/mbuK/73guv+94Lr/veC6/73guv+94Lr//////+Xz5P+94Lr/veC6/73g
        uv+94Lr/vN+5/32jZuMAAAAAAAAAAAAAAAAAAAAAm4x4M7+zp+v////////////////n49//w7mt/8O5
        rf/Dua3/w7mt/8O5rf/Dua3/x7yx/83DtP+Gp3D/vOC5/73guv+94Lr/veC6/73guv//////5fPk/73g
        uv+94Lr/veC6/73guv+rzqL/fKNmpwAAAAAAAAAAAAAAAAAAAACbjHgzv7On6///////////////////
        /////////////////////////////////////////////6rEnf+lyZr/veC6/73guv+94Lr/veC6////
        ///l8+T/veC6/73guv+94Lr/vOC5/4Sqce10m14uAAAAAAAAAAAAAAAAAAAAAJuMeDO/s6fr////////
        ////////4NrU/6+ikv+vopL/r6KS/6+ikv+vopL/r6KS/6+ikv+5rJ3/yL+t/4epc/+x1Kr/veC6/73g
        uv+94Lr/yubI/8Xkwv+94Lr/veC6/73guv+Vu4f1fKNmmAAAAAAAAAAAAAAAAAAAAAAAAAAAm4x4M7+z
        p+v/////////////////////////////////////////////////////////////////////6e/l/4us
        dv+myZv/vOC5/73guv+94Lr/veC6/73guv+32rL/jbN88H2iaKxVqlUDAAAAAAAAAAAAAAAAAAAAAAAA
        AACbjHgzv7On6////////////////+/t6v/X0cn/19HJ/9fRyf/X0cn/19HJ/9fRyf/X0cn/19HJ/9fR
        yf/W0Mj/z8q+/56ziv+IqnT/nL+P/6PFl/+ixJb/krOA/oCkaux4oGJbAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJuMeDO/s6fr////////////////7+3q/9fRyf/X0cn/19HJ/9fRyf/X0cn/19HJ/9fR
        yf/X0cn/19HJ/9fRyf/Wzsb/183E/+jl3v/f6Nn/0t7K/9bhzv/DwKz4v7GhXAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAm4x4M7+zp+v/////////////////////////////////////////////
        /////////////////////////////////////////////////////////////8a7ru+pnIw+AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbjHgzv7On6////////////////+Da1P+vopL/r6KS/6+i
        kv+vopL/r6KS/6+ikv+vopL/r6KS/6+ikv/v7er/////////////////////////////////v7On65uM
        eDMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJuMeDO/s6fr////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        //+/s6frm4x4MwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAm4x4M7+zp+v/////////////
        ///n49//w7mt/8O5rf/Dua3/w7mt/8O5rf/Dua3/w7mt/8O5rf/Dua3/w7mt/8O5rf/Dua3/5+Pf////
        /////////////7+zp+ubjHgzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbjHgzv7On6///
        //////////////f29P/r6OT/6+jk/+vo5P/r6OT/6+jk/+vo5P/r6OT/6+jk/+vo5P/r6OT/6+jk/+vo
        5P/39vT/////////////////v7On65uMeDMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJuM
        eDO/s6fr////////////////////////////////////////////////////////////////////////
        //////////////////////////////////+/s6frm4x4MwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAm4x4M7+zp+v/////////////////////////////////////////////////////////////
        /////////////////////////////////////////////7+zp+ubjHgzAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACbjHgzv7On6///////////////////////////////////////////////////
        ///////////////////Px77/xLmu/8S5rv/Eua7/xLmu/8S5rv/Eua7/rJ2O+JmLd0sAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJuMeDO/s6fr////////////////////////////////////////
        /////////////////////////////7Cik//r6OT/6+jk/+vo5P/r6OT/6+jk/87FvP+kloT5o496GQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAm4x4M7+zp+v/////////////////////////////
        ////////////////////////////////////////sKKT///////////////////////n49//ppaG+pqN
        ciYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbjHgzv7On6///////////////////
        //////////////////////////////////////////////////+wopP/////////////////6OTf/6aW
        hvqajXImAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJuMeDO/s6fr////////
        /////////////////////////////////////////////////////////////7Cik////////////+jk
        4P+ml4X5mo1yJgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAm4x4M7+z
        p+v/////////////////////////////////////////////////////////////////////sKKT////
        ///o5eD/ppeF+ZqNciYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACbjHgzv7On6///////////////////////////////////////////////////////////////////
        //+wopP/6eXh/6aXhfmajXImAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJuMeDOypZbx3tjS/97Y0v/e2NL/3tjS/97Y0v/e2NL/3tjS/97Y0v/e2NL/3tjS/97Y
        0v/e2NL/3tjS/6ucjP+mloX4k4N0IQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAmYxzFJuMeGabjHhmm4x4ZpuMeGabjHhmm4x4ZpuMeGabjHhmm4x4ZpuM
        eGabjHhmm4x4ZpuMeGabjHhmm4x6l5ODdCEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///8H///4Af4AAAD+AAAAfgAAAH4AAAA+AAAAPgAAAD4AAAA+AAAAPgA
        AAH4AAAB+AAAA/gAAA/4AAAf+AAAH/gAAB/4AAAf+AAAH/gAAB/4AAAf+AAAH/gAAB/4AAAf+AAAP/gA
        AH/4AAD/+AAB//gAA//4AAf////v//////8=
</value>
  </data>
</root>